{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","onBlur","error","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","NewMovie","onAdd","form","setForm","errors","setErrors","isFormValid","setIsFormValid","handleInputChange","target","prevForm","every","field","trim","handleBlur","prevErrors","onSubmit","preventDefault","some","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d409ae2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void,\n  error?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  onBlur,\n  error,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = (touched && required && !value) || error;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={(event) => {\n            onBlur?.(event);\n            setTouched(true);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField/TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [errors, setErrors] = useState({\n    title: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n  });\n\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value,\n    }));\n\n    const requiredFields = ['title', 'imgUrl', 'imdbUrl', 'imdbId'];\n\n    setIsFormValid(\n      requiredFields.every(field => form[field as keyof typeof form]\n        && form[field as keyof typeof form].trim() !== ''),\n    );\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: value.trim() === '',\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const requiredFields = ['title', 'imgUrl', 'imdbUrl', 'imdbId'];\n\n    if (requiredFields.some(field => errors[field as keyof typeof errors])) {\n      return;\n    }\n\n    onAdd(form);\n    setForm({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setIsFormValid(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"NewMovie\">\n      <h2 className=\"title\">Add a movie</h2>\n      <TextField\n        name=\"title\"\n        value={form.title}\n        onChange={handleInputChange}\n        onBlur={handleBlur}\n        error={errors.title}\n      />\n      <TextField\n        name=\"description\"\n        value={form.description}\n        onChange={handleInputChange}\n        onBlur={handleBlur}\n      />\n      <TextField\n        name=\"imgUrl\"\n        value={form.imgUrl}\n        onChange={handleInputChange}\n        onBlur={handleBlur}\n        error={errors.imgUrl}\n      />\n      <TextField\n        name=\"imdbUrl\"\n        value={form.imdbUrl}\n        onChange={handleInputChange}\n        onBlur={handleBlur}\n        error={errors.imdbUrl}\n      />\n      <TextField\n        name=\"imdbId\"\n        value={form.imdbId}\n        onChange={handleInputChange}\n        onBlur={handleBlur}\n        error={errors.imdbId}\n      />\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            disabled={!isFormValid}\n            className=\"button is-link\"\n            data-cy=\"submit-button\"\n          >\n            Add movie\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const handleAddMovie = (movie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}